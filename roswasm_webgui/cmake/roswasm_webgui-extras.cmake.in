if (NOT ${ROSWASM_NATIVE})
list(APPEND CMAKE_FIND_LIBRARY_SUFFIXES ".bc")

find_library(@PROJECT_NAME@_LIBRARY
            NAMES "@PROJECT_NAME@"
            PATHS "${@PROJECT_NAME@_DIR}/../../../@CATKIN_GLOBAL_LIB_DESTINATION@"
            NO_DEFAULT_PATH)

if(@PROJECT_NAME@_LIBRARY)
  # Multiple CMake projects case (i.e. 'catkin build'):
  # - The target has already been built when its dependencies require it
  # - Specify full path to found library
  set(@PROJECT_NAME@_LIBRARIES ${@PROJECT_NAME@_LIBRARY} "-lGL")
else()
  # Single CMake project case (i.e. 'catkin_make'):
  # - The target has not been built when its dependencies require it
  # - Specify target name only
  set(@PROJECT_NAME@_LIBRARIES @PROJECT_NAME@ "-lGL")
endif()

set(EMCC_FLAGS "")

set(EMCC_FLAGS "${EMCC_FLAGS} -s USE_WEBGL2=1")
set(EMCC_FLAGS "${EMCC_FLAGS} -s USE_GLFW=3")
set(EMCC_FLAGS "${EMCC_FLAGS} -s FULL_ES3=1")
set(EMCC_FLAGS "${EMCC_FLAGS} -s USE_SDL=2")
set(EMCC_FLAGS "${EMCC_FLAGS} -s USE_SDL_IMAGE=2")
set(EMCC_FLAGS "${EMCC_FLAGS} -s SDL2_IMAGE_FORMATS='[\"png\", \"jpg\"]'")
#set(EMCC_FLAGS "${EMCC_FLAGS} --preload-file data")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${EMCC_FLAGS}")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EMCC_FLAGS}")
endif()
